sap.ui.define([
	"QuickStartApplication/controller/BaseController"
], function(BaseController) {
	"use strict";

	return BaseController.extend("QuickStartApplication.controller.detalleProyecto", {

		/**
		 * Called when a controller is instantiated and its View controls (if available) are already created.
		 * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.
		 * @memberOf QuickStartApplication.view.view.detalleProyecto
		 */
		//	onInit: function() {
		//
		//	},

		/**
		 * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered
		 * (NOT before the first rendering! onInit() is used for that one!).
		 * @memberOf QuickStartApplication.view.view.detalleProyecto
		 */
		//	onBeforeRendering: function() {
		//
		//	},

		/**
		 * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.
		 * This hook is the same one that SAPUI5 controls get after being rendered.
		 * @memberOf QuickStartApplication.view.view.detalleProyecto
		 */
		//	onAfterRendering: function() {
		//
		//	},

		/**
		 * Called when the Controller is destroyed. Use this one to free resources and finalize activities.
		 * @memberOf QuickStartApplication.view.view.detalleProyecto
		 */
		//	onExit: function() {
		//
		//	}
		onPressGoToMaster: function (oEvent) {
//This code was generated by the layout editor.
//sap.ui.core.UIComponent.getRouterFor(this).navTo("Master2", []);
       this.getSplitAppObj  ().to(this.createId("master3"));
		},
		onPressNavToDetail : function(oEvent) {
			this.getSplitAppObj().to(this.createId("detailDetail"));
		},
		getSplitAppObj : function() {
			var result = this.byId("SplitAppDemo");
			if (!result) {
				jQuery.sap.log.info("SplitApp object can't be found");
			}
			return result;
		}


	});

});